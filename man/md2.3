.\"
.\" ----------------------------------------------------------------------------
.\" "THE BEER-WARE LICENSE" (Revision 42):
.\" <phk@login.dkuug.dk> wrote this file.  As long as you retain this notice you
.\" can do whatever you want with this stuff. If we meet some day, and you think
.\" this stuff is worth it, you can buy me a beer in return.   Poul-Henning Kamp
.\" ----------------------------------------------------------------------------
.\"
.\" 	$OpenBSD: md2.3,v 1.11 2010/07/13 22:34:45 tedu Exp $
.\"
.Dd $Mdocdate: July 13 2010 $
.Dt MD2 3
.Os
.Sh NAME
.Nm MD2Init ,
.Nm MD2Update ,
.Nm MD2Pad ,
.Nm MD2Final ,
.Nm MD2Transform ,
.Nm MD2End ,
.Nm MD2File ,
.Nm MD2FileChunk ,
.Nm MD2Data
.Nd calculate the RSA Data Security, Inc.,
.Dq MD2
message digest
.Sh LIBRARY
.Lb libmd
.Sh SYNOPSIS
.In sys/types.h
.In md2.h
.Ft void
.Fn MD2Init "MD2_CTX *context"
.Ft void
.Fn MD2Update "MD2_CTX *context" "const uint8_t *data" "size_t len"
.Ft void
.Fn MD2Pad "MD2_CTX *context"
.Ft void
.Fn MD2Final "uint8_t digest[MD2_DIGEST_LENGTH]" "MD2_CTX *context"
.Ft void
.Fn MD2Transform "uint32_t state[4]" "uint8_t block[MD2_BLOCK_LENGTH]"
.Ft "char *"
.Fn MD2End "MD2_CTX *context" "char *buf"
.Ft "char *"
.Fn MD2File "const char *filename" "char *buf"
.Ft "char *"
.Fn MD2FileChunk "const char *filename" "char *buf" "off_t offset" "off_t length"
.Ft "char *"
.Fn MD2Data "const uint8_t *data" "size_t len" "char *buf"
.Sh DESCRIPTION
The MD2 functions calculate a 128-bit cryptographic checksum (digest)
for any number of input bytes.
A cryptographic checksum is a one-way
hash-function, that is, you cannot find (except by exhaustive search)
the input corresponding to a particular output.
This net result is a
.Dq fingerprint
of the input-data, which doesn't disclose the actual input.
.Pp
MD2 is the slowest, MD4 is the fastest and MD5 is somewhere in the middle.
MD2 can only be used for Privacy-Enhanced Mail.
MD4 has been criticized for being too weak, so MD5 was developed in
response as ``MD4 with safety-belts''.
MD4 and MD5 have been broken; they should only be used where necessary for
backward compatibility.
The attacks on both MD4 and MD5
are both in the nature of finding
.Dq collisions
\- that is, multiple
inputs which hash to the same value; it is still unlikely for an attacker
to be able to determine the exact original input given a hash value.
.Pp
The
.Fn MD2Init ,
.Fn MD2Update ,
and
.Fn MD2Final
functions are the core functions.
Allocate an MD2_CTX, initialize it with
.Fn MD2Init ,
run over the data with
.Fn MD2Update ,
and finally extract the result using
.Fn MD2Final .
.Pp
The
.Fn MD2Pad
function can be used to apply padding to the message digest as in
.Fn MD2Final ,
but the current context can still be used with
.Fn MD2Update .
.Pp
The
.Fn MD2Transform
function is used by
.Fn MD2Update
to hash 512-bit blocks and forms the core of the algorithm.
Most programs should use the interface provided by
.Fn MD2Init ,
.Fn MD2Update
and
.Fn MD2Final
instead of calling
.Fn MD2Transform
directly.
.Pp
.Fn MD2End
is a wrapper for
.Fn MD2Final
which converts the return value to an MD2_DIGEST_STRING_LENGTH-character
(including the terminating '\e0')
.Tn ASCII
string which represents the 128 bits in hexadecimal.
.Pp
.Fn MD2File
calculates the digest of a file, and uses
.Fn MD2End
to return the result.
If the file cannot be opened, a null pointer is returned.
.Pp
.Fn MD2FileChunk
behaves like
.Fn MD2File
but calculates the digest only for that portion of the file starting at
.Fa offset
and continuing for
.Fa length
bytes or until end of file is reached, whichever comes first.
A zero
.Fa length
can be specified to read until end of file.
A negative
.Fa length
or
.Fa offset
will be ignored.
.Fn MD2Data
calculates the digest of a chunk of data in memory, and uses
.Fn MD2End
to return the result.
.Pp
When using
.Fn MD2End ,
.Fn MD2File ,
.Fn MD2FileChunk ,
or
.Fn MD2Data ,
the
.Ar buf
argument can be a null pointer, in which case the returned string
is allocated with
.Xr malloc 3
and subsequently must be explicitly deallocated using
.Xr free 3
after use.
If the
.Ar buf
argument is non-null it must point to at least MD2_DIGEST_STRING_LENGTH
characters of buffer space.
.Sh SEE ALSO
.Xr md2 3 ,
.Xr md4 3 ,
.Xr md5 3 ,
.Xr rmd160 3 ,
.Xr sha1 3 ,
.Xr sha2 3
.Rs
.%A B. Kaliski
.%T The MD2 Message-Digest Algorithm
.%O RFC 1319
.Re
.Rs
.%A R. Rivest
.%T The MD4 Message-Digest Algorithm
.%O RFC 1186
.Re
.Rs
.%A R. Rivest
.%T The MD5 Message-Digest Algorithm
.%O RFC 1321
.Re
.Rs
.%A RSA Laboratories
.%T Frequently Asked Questions About today's Cryptography
.%O \&<http://www.rsa.com/rsalabs/faq/>
.Re
.Rs
.%A H. Dobbertin
.%T Alf Swindles Ann
.%J CryptoBytes
.%N 1(3):5
.%D 1995
.Re
.Rs
.%A MJ. B. Robshaw
.%T On Recent Results for MD4 and MD5
.%J RSA Laboratories Bulletin
.%N 4
.%D November 12, 1996
.Re
.Rs
.%A Hans Dobbertin
.%T Cryptanalysis of MD5 Compress
.Re
.Sh HISTORY
These functions appeared in
.Ox 2.0
and
.Nx 1.3 .
.Sh AUTHORS
The original MD2 routines were developed by
.Tn RSA
Data Security, Inc., and published in the above references.
This code is derived from a public domain implementation written by Colin Plumb.
.Pp
The
.Fn MD2End ,
.Fn MD2File ,
.Fn MD2FileChunk ,
and
.Fn MD2Data
helper functions are derived from code written by Poul-Henning Kamp.
.Sh BUGS
Collisions have been found for the full versions of both MD4 and MD5.
The use of
.Xr sha2 3
is recommended instead.
